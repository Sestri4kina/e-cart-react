{"version":3,"sources":["webpack:///./src/app/utils/services/handle-token.ts","webpack:///./src/app/app-controller.tsx","webpack:///./src/app/utils/remote-api/products-api.ts"],"names":["handleNotSupported","err","console","log","JSON","stringify","Error","hasAccessToken","localStorage","getItem","accessTokenObject","accessTokenStringified","parse","exports","accessTokenIsExpired","now","Date","expiresAt","accessTokenExpiresAt","persistAccessToken","value","expireTime","accessToken_1","setItem","removeAccessToken","removeItem","accessToken","React","__webpack_require__","ReactDOM","app_component_1","render","createElement","App","document","getElementById","module","hot","accept","config_1","axios_1","handle_token_1","getProducts","productsPath","moltinBaseAPI","moltinAPI","productAPI","token","headers","default","get","then","res","data","_a","sent","err_1"],"mappings":"oDAAA,SAASA,EAAmBC,GAKxB,MAJAC,QAAQC,IAAI,uEAEFC,KAAKC,UAAUJ,GAAI,cAEvB,IAAIK,MAAML,GAIpB,SAASM,IACL,IACI,QAASC,aAAaC,QAAQ,eAChC,MAAMR,GACJD,EAAmBC,IAI3B,SAASS,IACL,IACI,IAAMC,EAAiCH,aAAaC,QAAQ,gBAAkB,GAC9E,OAAOL,KAAKQ,MAAMD,GAEpB,MAAMV,GACJD,EAAmBC,qDAgB3BY,EAAAC,qBAAA,WACI,IACI,IAAMC,EAAMC,KAAKD,MAEjB,OADAb,QAAQC,IAAII,MACRA,KAhBZ,WACI,IACI,OAAIA,IACOG,IAAoBO,eAE/B,EACF,MAAMhB,GACJD,EAAmBC,IAURiB,GAAyBH,EAGtC,MAAMd,GACJD,EAAmBC,KAI3BY,EAAAM,mBAAA,SAAmCC,EAAeH,GAC9C,IACI,IAAMI,EAAyB,IAAZJ,EACbK,EAAclB,KAAKC,WAAYe,MAAKA,EAAEH,UAAWI,IACvDb,aAAae,QAAQ,cAAeD,GACtC,MAAMrB,GACJD,EAAmBC,KAI3BY,EAAAW,kBAAA,WACI,IACQjB,KACAC,aAAaiB,WAAW,eAE9B,MAAMxB,GACJD,EAAmBC,KAI3BY,EAAAa,YAAA,WACI,IACI,OAAInB,IACOG,IAAoBU,WAE/B,EACF,MAAMnB,GACJD,EAAmBC,uFC/E3B,IAAA0B,EAAAC,EAAA,GACAC,EAAAD,EAAA,GAEAE,EAAAF,EAAA,IAIAC,EAASE,OACLJ,EAAAK,cAACF,EAAAG,IAAG,MACJC,SAASC,eAAe,SAIxBC,EAAOC,IAAIC,y7CCbf,IAAAC,EAAAX,EAAA,GACAY,EAAAZ,EAAA,IACAa,EAAAb,EAAA,IAEAf,EAAA6B,YAAA,+GAQyB,6BANXC,EAAeJ,EAAAK,cAAgBL,EAAAM,UAAUC,WACzCC,EAAQN,EAAAf,eAERsB,MACiB,cAAI,UAAUD,GAEpB,EAAMP,EAAAS,QAAMC,IACzBP,GACEK,QAAOA,IACXG,KAAK,SAAAC,GAAO,OAAAA,EAAIC,KAAKA,eAEvB,SALiBC,EAAAC,iCAOjBrD,QAAQC,IAAIqD","file":"0.0ca27170416bfdcfa445.hot-update.js","sourcesContent":["function handleNotSupported(err: any) {\n    console.log(`\n            Probably local storage is not supported.\n            ${JSON.stringify(err)}\n        `);\n    throw new Error(err);\n}\n\n//check whether there is access token in localStorage\nfunction hasAccessToken() {\n    try {\n        return !!localStorage.getItem('accessToken');\n    } catch(err) {\n        handleNotSupported(err);\n    }\n}\n\nfunction accessTokenObject() {\n    try {\n        const accessTokenStringified: string = localStorage.getItem('accessToken') || '';\n        return JSON.parse(accessTokenStringified);\n        \n    } catch(err) {\n        handleNotSupported(err);\n    }\n}\n\nfunction accessTokenExpiresAt() {\n    try {\n        if (hasAccessToken()) {\n            return accessTokenObject().expiresAt;\n        } \n        return undefined;\n    } catch(err) {\n        handleNotSupported(err);\n    }\n}\n\n//check whether token is expired\nexport function accessTokenIsExpired() {\n    try {\n        const now = Date.now();\n        console.log(hasAccessToken());\n        if (hasAccessToken()) {\n            return accessTokenExpiresAt() > now;\n        }\n        return true;\n    } catch(err) {\n        handleNotSupported(err);\n    }\n} \n\nexport function persistAccessToken(value: string, expiresAt: number) {\n    try {\n        const expireTime = expiresAt * 1000;\n        const accessToken = JSON.stringify({ value, expiresAt: expireTime })\n        localStorage.setItem('accessToken', accessToken);\n    } catch(err) {\n        handleNotSupported(err);\n    }\n}\n\nexport function removeAccessToken() {\n    try {\n        if (hasAccessToken()) {\n            localStorage.removeItem('accessToken');\n        }\n    } catch(err) {\n        handleNotSupported(err);\n    }\n}\n\nexport function accessToken() {\n    try {\n        if (hasAccessToken()) {\n            return accessTokenObject().value;\n        } \n        return undefined;\n    } catch(err) {\n        handleNotSupported(err);\n    }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { App } from \"./app-component\";\n\ndeclare let module: any;\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);\n\nif (module.hot) {\n    module.hot.accept();\n }","import { moltinBaseAPI, moltinAPI } from '../config';\nimport axios from 'axios';\nimport { accessToken } from '../services/handle-token';\n\nexport async function getProducts() {\n    try {\n        const productsPath = moltinBaseAPI + moltinAPI.productAPI;\n        const token = accessToken();\n\n        const headers: any = {};\n        headers['Authorization'] = `Bearer ${token}`;\n\n        const products = await axios.get(\n            productsPath,\n            { headers }\n        ).then(res => res.data.data);\n\n        return products;\n    } catch(err) {\n        console.log(err);\n    }\n}"],"sourceRoot":""}