{"version":3,"sources":["webpack:///./src/app/index.tsx","webpack:///./src/app/app-component.tsx","webpack:///./src/app/utils/remote-api/products-api.ts"],"names":["React","__webpack_require__","ReactDOM","app_component_1","render","createElement","App","document","getElementById","module","hot","accept","auth_api_1","handle_token_1","products_api_1","_super","props","call","this","__extends","prototype","products","accessTokenIsExpired","getAccessToken","authenticate","_a","sent","console","log","persistAccessToken","access_token","expires","getProducts","componentDidMount","Component","exports","config_1","axios_1","productsPath","moltinBaseAPI","moltinAPI","productAPI","token","accessToken","headers","default","get","then","res","data","err_1"],"mappings":"qGAAA,IAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,GAEAE,EAAAF,EAAA,IAIAC,EAASE,OACLJ,EAAAK,cAACF,EAAAG,IAAG,MACJC,SAASC,eAAe,SAIxBC,EAAOC,IAAIC,0xDCbf,IAAAX,EAAAC,EAAA,GACAW,EAAAX,EAAA,IACAY,EAAAZ,EAAA,IACAa,EAAAb,EAAA,IAGAK,EAAA,SAAAS,GACI,SAAAT,EAAYU,UACRD,EAAAE,KAAAC,KAAMF,IAAME,KA+CpB,OAjDyBC,EAAAb,EAAAS,GAgBfT,EAAAc,UAAAC,SAAN,kHACSR,EAAAS,wBACoB,EAAMV,EAAAW,mBAD1B,mBACKC,EAAeC,EAAAC,OACrBC,QAAQC,IAAIJ,GACZX,EAAAgB,mBAAmBL,EAAaM,aAAcN,EAAaO,sBAE3DJ,QAAQC,IAAI,0DAGC,SAAMd,EAAAkB,6BAAjBX,EAAWI,EAAAC,OACjBC,QAAQC,IAAIP,aAUhBf,EAAAc,UAAAa,kBAAA,WACIf,KAAKG,YAGTf,EAAAc,UAAAhB,OAAA,WACI,OACIJ,EAAAK,cAAA,WACIL,EAAAK,cAAA,gCAMhBC,EAjDA,CAAyBN,EAAMkC,WAAlBC,EAAA7B,s7CCNb,IAAA8B,EAAAnC,EAAA,GACAoC,EAAApC,EAAA,IACAY,EAAAZ,EAAA,IAEAkC,EAAAH,YAAA,+GAQyB,6BANXM,EAAeF,EAAAG,cAAgBH,EAAAI,UAAUC,WACzCC,EAAQ7B,EAAA8B,eAERC,MACiB,cAAI,UAAUF,GAEpB,EAAML,EAAAQ,QAAMC,IACzBR,GACEM,QAAOA,IACXG,KAAK,SAAAC,GAAO,OAAAA,EAAIC,eAElB,SALiBxB,EAAAC,iCAOjBC,QAAQC,IAAIsB","file":"0.8db3e7e56d7f57622253.hot-update.js","sourcesContent":["import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { App } from \"./app-component\";\n\ndeclare let module: any;\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);\n\nif (module.hot) {\n    module.hot.accept();\n }\n","import * as React from \"react\";\nimport { getAccessToken } from './utils/remote-api/auth-api';\nimport { persistAccessToken, accessTokenIsExpired } from './utils/services/handle-token';\nimport { getProducts } from './utils/remote-api/products-api';\nimport { AccessToken } from \"./store\";\n\nexport class App extends React.Component<any, any> {\n    constructor(props: any) {\n        super(props);\n    }\n\n    // auth() {\n    //     getAccessToken()\n    //         .then((res: AccessToken) => {\n    //             console.log(res);\n    //             //persistAccessToken(res.access_token, res.expires);\n    //         })\n    //         .catch(err => {\n    //             console.log(err);\n    //         })\n    // }\n\n    async products() {\n        if  (accessTokenIsExpired()) {\n            const authenticate = await getAccessToken();\n            console.log(authenticate);\n            persistAccessToken(authenticate.access_token, authenticate.expires);\n        } else {\n            console.log(\"there is already token in the storage\");\n        }\n\n        const products = await getProducts();\n        console.log(products);\n        // getProducts()\n        //     .then(res => {\n        //         console.log(res);\n        //     })\n        //     .catch(err => {\n        //         console.log(err);\n        //     }) \n    }\n\n    componentDidMount() {\n        this.products();\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>\n                    Render react app\n                </h1>\n            </div>\n        );\n    }\n}\n","import { moltinBaseAPI, moltinAPI } from '../config';\nimport axios from 'axios';\nimport { accessToken } from '../services/handle-token';\n\nexport async function getProducts() {\n    try {\n        const productsPath = moltinBaseAPI + moltinAPI.productAPI;\n        const token = accessToken();\n\n        const headers: any = {};\n        headers['Authorization'] = `Bearer ${token}`;\n\n        const products = await axios.get(\n            productsPath,\n            { headers }\n        ).then(res => res.data);\n\n        return products;\n    } catch(err) {\n        console.log(err);\n    }\n}"],"sourceRoot":""}