{"version":3,"sources":["webpack:///./src/app/app-component.tsx"],"names":["React","__webpack_require__","auth_api_1","handle_token_1","products_api_1","product_list_1","App","_super","props","_this","call","this","state","products","__extends","prototype","fetchProducts","console","log","accessTokenIsExpired","getAccessToken","authenticate","_a","sent","persistAccessToken","access_token","expires","getProducts","setState","componentDidMount","render","length","createElement","ProductList","Component","exports"],"mappings":"oyDAAA,IAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,IACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,IACAI,EAAAJ,EAAA,IAEAK,EAAA,SAAAC,GACI,SAAAD,EAAYE,GAAZ,IAAAC,EACIF,EAAAG,KAAAC,KAAMH,IAAMG,YACZF,EAAKG,OACDC,eAuCZ,OA3CyBC,EAAAR,EAAAC,GAUfD,EAAAS,UAAAC,cAAN,kHACIC,QAAQC,IAAIf,EAAAgB,wBACPhB,EAAAgB,wBACoB,EAAMjB,EAAAkB,mBAD1B,mBACKC,EAAeC,EAAAC,OACrBN,QAAQC,IAAIG,GACZlB,EAAAqB,mBAAmBH,EAAaI,aAAcJ,EAAaK,sBAE3DT,QAAQC,IAAI,0DAGC,SAAMd,EAAAuB,6BAAjBd,EAAWS,EAAAC,OACjBZ,KAAKiB,UACDf,SAAQA,cAIhBP,EAAAS,UAAAc,kBAAA,WACIlB,KAAKK,iBAGTV,EAAAS,UAAAe,OAAA,WACY,IAAAjB,EAAAF,KAAAC,MAAAC,SAGR,OAFAI,QAAQC,IAAIL,GACZI,QAAQC,MAAML,EAASkB,UACdlB,EAASkB,QACd/B,EAAAgC,cAAA,WACIhC,EAAAgC,cAAA,sBAGAhC,EAAAgC,cAAC3B,EAAA4B,aAAYpB,SAAUA,MAIvCP,EA3CA,CAAyBN,EAAMkC,WAAlBC,EAAA7B","file":"0.f5e44d41c97f58128bb8.hot-update.js","sourcesContent":["import * as React from \"react\";\nimport { getAccessToken } from './utils/remote-api/auth-api';\nimport { persistAccessToken, accessTokenIsExpired, removeAccessToken } from './utils/services/handle-token';\nimport { getProducts } from './utils/remote-api/products-api';\nimport { ProductList } from \"./components/product-list\";\n\nexport class App extends React.Component<any, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            products: []\n        };\n\n        //this.fetchProducts = this.fetchProducts.bind(this);\n    }\n\n    async fetchProducts() {\n        console.log(accessTokenIsExpired())\n        if  (accessTokenIsExpired()) {\n            const authenticate = await getAccessToken();\n            console.log(authenticate);\n            persistAccessToken(authenticate.access_token, authenticate.expires);\n        } else {\n            console.log(\"there is already token in the storage\");\n        }\n\n        const products = await getProducts();\n        this.setState({\n            products\n        });\n    }\n\n    componentDidMount() {\n        this.fetchProducts();\n    }\n\n    render() {\n        const { products } = this.state;\n        console.log(products);\n        console.log(!!products.length);\n        return !!products.length && (\n            <div>\n                <h1>\n                    products\n                </h1>\n                <ProductList products={products} />\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}