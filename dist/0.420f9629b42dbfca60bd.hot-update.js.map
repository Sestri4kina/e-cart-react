{"version":3,"sources":["webpack:///./src/app/index.tsx","webpack:///./src/app/app-component.tsx"],"names":["React","__webpack_require__","ReactDOM","app_component_1","render","createElement","App","document","getElementById","module","hot","accept","auth_api_1","handle_token_1","_super","props","call","this","__extends","prototype","auth","getAccessToken","then","res","console","log","catch","err","products","accessTokenIsExpired","authenticate","_a","sent","componentDidMount","Component","exports"],"mappings":"qGAAA,IAAAA,EAAAC,EAAA,GACAC,EAAAD,EAAA,GAEAE,EAAAF,EAAA,IAIAC,EAASE,OACLJ,EAAAK,cAACF,EAAAG,IAAG,MACJC,SAASC,eAAe,SAIxBC,EAAOC,IAAIC,0xDCbf,IAAAX,EAAAC,EAAA,GACAW,EAAAX,EAAA,IACAY,EAAAZ,EAAA,IAIAK,EAAA,SAAAQ,GACI,SAAAR,EAAYS,UACRD,EAAAE,KAAAC,KAAMF,IAAME,KAkDpB,OApDyBC,EAAAZ,EAAAQ,GAKrBR,EAAAa,UAAAC,KAAA,WACIR,EAAAS,iBACKC,KAAK,SAACC,GACHC,QAAQC,IAAIF,KAGfG,MAAM,SAAAC,GACHH,QAAQC,IAAIE,MAIlBrB,EAAAa,UAAAS,SAAN,gHACOf,EAAAgB,wBACsB,EAAMjB,EAAAS,mBAD5B,mBACOS,EAAeC,EAAAC,OACrBR,QAAQC,IAAIK,gBAGZN,QAAQC,IAAI,0EAYpBnB,EAAAa,UAAAc,kBAAA,WAMIhB,KAAKW,YAGTtB,EAAAa,UAAAf,OAAA,WACI,OACIJ,EAAAK,cAAA,WACIL,EAAAK,cAAA,gCAMhBC,EApDA,CAAyBN,EAAMkC,WAAlBC,EAAA7B","file":"0.420f9629b42dbfca60bd.hot-update.js","sourcesContent":["import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { App } from \"./app-component\";\n\ndeclare let module: any;\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);\n\nif (module.hot) {\n    module.hot.accept();\n }\n","import * as React from \"react\";\nimport { getAccessToken } from './utils/remote-api/auth-api';\nimport { persistAccessToken, accessTokenIsExpired } from './utils/services/handle-token';\nimport { getProducts } from './utils/remote-api/products-api';\nimport { AccessToken } from \"./store\";\n\nexport class App extends React.Component<any, any> {\n    constructor(props: any) {\n        super(props);\n    }\n\n    auth() {\n        getAccessToken()\n            .then((res: AccessToken) => {\n                console.log(res);\n                //persistAccessToken(res.access_token, res.expires);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    async products() {\n        if(accessTokenIsExpired()) {\n            const authenticate = await getAccessToken();\n            console.log(authenticate);\n           \n        } else {\n            console.log(\"there is already token in the storage\");\n        }\n\n        // getProducts()\n        //     .then(res => {\n        //         console.log(res);\n        //     })\n        //     .catch(err => {\n        //         console.log(err);\n        //     }) \n    }\n\n    componentDidMount() {\n        // if(accessTokenIsExpired()) {\n        //     this.auth();\n        // } else {\n        //     console.log(\"there is already token in the storage\");\n        // }\n        this.products();\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>\n                    Render react app\n                </h1>\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}